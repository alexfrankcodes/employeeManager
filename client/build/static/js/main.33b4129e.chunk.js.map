{"version":3,"sources":["components/layout/Navbar.js","components/layout/Landing.js","actions/alert.js","actions/types.js","components/auth/Register.js","actions/auth.js","components/auth/Login.js","components/layout/Alert.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","Landing","class","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","uuid","v4","type","payload","setTimeout","connect","register","_ref","name","email","password","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","config","body","res","errors","wrap","_context","prev","next","headers","Content-Type","JSON","stringify","axios","post","sent","data","t0","response","forEach","error","stop","_x","apply","this","_useState","useState","passwordConfirm","_useState2","slicedToArray","formData","setFormData","onChange","event","objectSpread","defineProperty","target","value","onSubmit","preventDefault","react","placeholder","Login","console","log","required","state","alerts","alert","map","key","concat","initialState","token","localStorage","getItem","isAuthenticated","loading","user","combineReducers","action","toConsumableArray","filter","auth","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","react_router","exact","path","component","layout_Alert","Register","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qNAsBeA,EAlBA,kBACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACPL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBADf,YAIFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,aAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAT,aCMOC,EAlBC,kBACdN,EAAAC,EAAAC,cAAA,WAASK,MAAM,WACbP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,gBACTP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,iBACTP,EAAAC,EAAAC,cAAA,MAAIK,MAAM,WAAV,qBACAP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,WACTP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,mBAA/B,WAGAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,iBAA5B,uFCVGK,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA2B,IAA3B,OAAoC,SAAAG,GAE1D,IAAMC,EAAKC,IAAKC,KAEhBH,EAAS,CACPI,KCNqB,YDOrBC,QAAS,CAAEX,MAAKC,YAAWM,QAG7BK,WAAW,kBAAMN,EAAS,CAAEI,KCTF,eDSsBC,QAASJ,KAAOL,sBE8EnDW,cACb,KACA,CAAEd,WAAUe,SCvFU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAOC,EAAhBH,EAAgBG,SAAhB,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAA9B,EAAA+B,KAA+B,SAAAC,EAAMlB,GAAN,IAAAmB,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAA9B,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC/CP,EAAS,CACbQ,QAAS,CACPC,eAAgB,qBAKdR,EAAOS,KAAKC,UAAU,CAAEpB,OAAMC,QAAOC,aARUY,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYjCK,IAAMC,KAAK,aAAcZ,EAAMD,GAZE,OAY7CE,EAZ6CG,EAAAS,KAenDjC,EAAS,CACPI,KFjB0B,mBEkB1BC,QAASgB,EAAIa,OAjBoCV,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,UAqB7CF,EAASE,EAAAW,GAAIC,SAASF,KAAKZ,SAE/BA,EAAOe,QAAQ,SAAAC,GAAK,OAAItC,EAASP,EAAS6C,EAAM5C,IAAK,aAIvDM,EAAS,CACPI,KF5BuB,kBEA0B,yBAAAoB,EAAAe,SAAArB,EAAA,iBAA/B,gBAAAsB,GAAA,OAAA3B,EAAA4B,MAAAC,KAAA7C,YAAA,KDqFTU,CAnFE,SAAAE,GAA4B,IAAzBhB,EAAyBgB,EAAzBhB,SAAUe,EAAeC,EAAfD,SAAemC,EAEXC,mBAAS,CACvClC,KAAM,GACNC,MAAO,GACPC,SAAU,GACViC,gBAAiB,KANwBC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAA6B,EAAA,GAEpCK,EAFoCF,EAAA,GAE1BG,EAF0BH,EAAA,GAUnCpC,EAA2CsC,EAA3CtC,KAAMC,EAAqCqC,EAArCrC,MAAOC,EAA8BoC,EAA9BpC,SAAUiC,EAAoBG,EAApBH,gBAGzBK,EAAW,SAAAC,GAAK,OACpBF,EAAYnC,OAAAsC,EAAA,EAAAtC,CAAA,GAAKkC,EAANlC,OAAAuC,EAAA,EAAAvC,CAAA,GAAiBqC,EAAMG,OAAO5C,KAAOyC,EAAMG,OAAOC,UAGzDC,EAAQ,eAAA3C,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAA9B,EAAA+B,KAAG,SAAAC,EAAMiC,GAAN,OAAAnC,EAAA9B,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACfyB,EAAMM,iBACF7C,IAAaiC,EACfpD,EAAS,yBAA0B,UAEnCe,EAAS,CAAEE,OAAMC,QAAOC,aALX,wBAAAY,EAAAe,SAAArB,MAAH,gBAAAsB,GAAA,OAAA3B,EAAA4B,MAAAC,KAAA7C,YAAA,GASd,OACEZ,EAAAC,EAAAC,cAACuE,EAAA,SAAD,KACEzE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,WACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,wBAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOoE,SAAU,SAAAL,GAAK,OAAIK,EAASL,KACjDlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiB,KAAK,OACLuD,YAAY,OACZjD,KAAK,OACL6C,MAAO7C,EACPwC,SAAU,SAAAC,GAAK,OAAID,EAASC,OAGhClE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiB,KAAK,QACLuD,YAAY,gBACZjD,KAAK,QACL6C,MAAO5C,EACPuC,SAAU,SAAAC,GAAK,OAAID,EAASC,OAGhClE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiB,KAAK,WACLuD,YAAY,WACZjD,KAAK,WACL6C,MAAO3C,EACPsC,SAAU,SAAAC,GAAK,OAAID,EAASC,OAGhClE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiB,KAAK,WACLuD,YAAY,mBACZjD,KAAK,kBACL6C,MAAOV,EACPK,SAAU,SAAAC,GAAK,OAAID,EAASC,OAGhClE,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,SAAShB,UAAU,kBAAkBmE,MAAM,cAEzDtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,4BAC2BH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAT,eEpBlBsE,EAxDD,WAAM,IAAAjB,EAEcC,mBAAS,CACvCjC,MAAO,GACPC,SAAU,KAJMkC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAA6B,EAAA,GAEXK,EAFWF,EAAA,GAEDG,EAFCH,EAAA,GAQVnC,EAAoBqC,EAApBrC,MAAOC,EAAaoC,EAAbpC,SAGTsC,EAAW,SAAAC,GAAK,OACpBF,EAAYnC,OAAAsC,EAAA,EAAAtC,CAAA,GAAKkC,EAANlC,OAAAuC,EAAA,EAAAvC,CAAA,GAAiBqC,EAAMG,OAAO5C,KAAOyC,EAAMG,OAAOC,UAGzDC,EAAQ,eAAA/C,EAAAK,OAAAC,EAAA,EAAAD,CAAAE,EAAA9B,EAAA+B,KAAG,SAAAC,EAAMiC,GAAN,OAAAnC,EAAA9B,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACfyB,EAAMM,iBACNI,QAAQC,IAAI,WAFG,wBAAAtC,EAAAe,SAAArB,MAAH,gBAAAsB,GAAA,OAAA/B,EAAAgC,MAAAC,KAAA7C,YAAA,GAKd,OACEZ,EAAAC,EAAAC,cAACuE,EAAA,SAAD,KACEzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,uBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,WACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,2BAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOoE,SAAU,SAAAL,GAAK,OAAIK,EAASL,KACjDlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiB,KAAK,QACLuD,YAAY,gBACZjD,KAAK,QACL6C,MAAO5C,EACPuC,SAAU,SAAAC,GAAK,OAAID,EAASC,IAC5BY,UAAQ,KAGZ9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiB,KAAK,WACLuD,YAAY,WACZjD,KAAK,WACL6C,MAAO3C,EACPsC,SAAU,SAAAC,GAAK,OAAID,EAASC,OAGhClE,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,SAAShB,UAAU,kBAAkBmE,MAAM,WAEzDtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,0BACyBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,cChChBiB,cAJS,SAAAyD,GAAK,MAAK,CAChCC,OAAQD,EAAME,QAGD3D,CAjBD,SAAAE,GAAA,IAAGwD,EAAHxD,EAAGwD,OAAH,OACD,OAAXA,GACAA,EAAOnE,OAAS,GAChBmE,EAAOE,IAAI,SAAAD,GAAK,OACdjF,EAAAC,EAAAC,cAAA,OAAKiF,IAAKF,EAAMjE,GAAIb,UAAS,eAAAiF,OAAiBH,EAAMvE,YACjDuE,EAAMxE,yCCPP4E,EAAe,GCAfA,EAAe,CACnBC,MAAOC,aAAaC,QAAQ,SAC5BC,gBAAiB,KACjBC,SAAS,EACTC,KAAM,MCFOC,4BAAgB,CAC7BX,MFDa,WAAuC,IAA9BF,EAA8BnE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtByE,EAAcQ,EAAQjF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE5CK,EAAkB0E,EAAlB1E,KAAMC,EAAYyE,EAAZzE,QAEd,OAAQD,GACN,ILPqB,YKSnB,SAAAiE,OAAAvD,OAAAiE,EAAA,EAAAjE,CAAWkD,GAAX,CAAkB3D,IACpB,ILTwB,eKWtB,OAAO2D,EAAMgB,OAAO,SAAAd,GAAK,OAAIA,EAAMjE,KAAOI,IAC5C,QACE,OAAO2D,IEVXiB,KDGa,WAAuC,IAA9BjB,EAA8BnE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtByE,EAAcQ,EAAQjF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE5CK,EAAkB0E,EAAlB1E,KAAMC,EAAYyE,EAAZzE,QAEd,OAAQD,GACN,INV4B,mBMY1B,OADAoE,aAAaU,QAAQ,QAAS7E,EAAQkE,OAC/BzD,OAAAsC,EAAA,EAAAtC,CAAA,GACFkD,EACA3D,EAFL,CAGEqE,iBAAiB,EACjBC,SAAS,IAGb,INlByB,gBMoBvB,OADAH,aAAaW,WAAW,SACjBrE,OAAAsC,EAAA,EAAAtC,CAAA,GACFkD,EADL,CAEEO,MAAO,KACPG,iBAAiB,EACjBC,SAAS,IAGb,QACE,OAAOX,MExBPoB,EAAa,CAACC,KASLC,EANDC,sBACZC,EAPmB,GASnBC,8BAAoBC,kBAAejD,WAAf,EAAmB2C,KCe1BO,EAlBH,kBACV1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAUN,MAAOA,GACfrG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACuE,EAAA,SAAD,KACEzE,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1G,IACjCN,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACjBH,EAAAC,EAAAC,cAAC+G,EAAD,MACAjH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWE,IACzClH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWrC,UClBlDwC,IAASC,OAAOpH,EAAAC,EAAAC,cAACmH,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.33b4129e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Navbar component that will be displayed on every page\r\nconst Navbar = () => (\r\n  <nav className=\"navbar bg-dark\">\r\n    <h1>\r\n      <Link to=\"/\">\r\n        <i className=\"fas fa-walking\" /> EmStar\r\n      </Link>\r\n    </h1>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Landing page w/ option to login or sign up\r\nconst Landing = () => (\r\n  <section class=\"landing\">\r\n    <div class=\"dark-overlay\">\r\n      <div class=\"landing-inner\">\r\n        <h1 class=\"x-large\">Welcome to EmStar</h1>\r\n        <div class=\"buttons\">\r\n          <Link to=\"/register\" className=\"btn btn-primary\">\r\n            Sign Up\r\n          </Link>\r\n          <Link to=\"/login\" className=\"btn btn-light\">\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Landing;\r\n","import uuid from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeout = 4000) => dispatch => {\r\n  // Generate unique id\r\n  const id = uuid.v4();\r\n  // Send back payload\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n  // Remove alert after 4 seconds\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","// Constants for actions\r\n\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Register = ({ setAlert, register }) => {\r\n  // Use a useState hook to handle state\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\"\r\n  });\r\n\r\n  // Destructure out components of formData\r\n  const { name, email, password, passwordConfirm } = formData;\r\n\r\n  // When user fills in field, update that field in the state\r\n  const onChange = event =>\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n\r\n  // Handle form submission\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    if (password !== passwordConfirm) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={event => onSubmit(event)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={event => onChange(event)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={event => onChange(event)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={event => onChange(event)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"passwordConfirm\"\r\n            value={passwordConfirm}\r\n            onChange={event => onChange(event)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { setAlert, register }\r\n)(Register);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from \"./types\";\r\n\r\n// Register user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  // Prepare date for POST request\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    // Make POST request\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    // Successful registration\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    // Display all errors\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    // Unsuccessful registration\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  // Use a useState hook to handle state\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  // Destructure out components of formData\r\n  const { email, password } = formData;\r\n\r\n  // When user fills in field, update that field in the state\r\n  const onChange = event =>\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n\r\n  // Handle form submission\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    console.log(\"Success\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"alert alert-danger\">Invalid credentials</div>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Sign into Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={event => onSubmit(event)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={event => onChange(event)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={event => onChange(event)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  // Destructuring\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      // Copy over existing array and add new alert\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      // Fliter out alert to be removed\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { REGISTER_SUCCESS, REGISTER_FAIL } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  // Destructuring\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n// Set up state\r\nconst initialState = {};\r\n\r\n// Set middleware\r\nconst middleware = [thunk];\r\n\r\n// Set up store\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Alert from \"./components/layout/Alert\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n// Main App\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Fragment>\r\n        <Navbar />\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <section className=\"container\">\r\n          <Alert />\r\n          <Switch>\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n          </Switch>\r\n        </section>\r\n      </Fragment>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}